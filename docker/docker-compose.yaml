version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: trading_platform
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: trading_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_user -d trading_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Sentiment Analysis Service
  sentiment-service:
    build:
      context: ./ml-services/sentiment
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - FINNHUB_API_KEY=${FINNHUB_API_KEY}
      - REDIS_URL=redis://redis:6379
      - PORT=8001
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./ml-services/sentiment:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Trading Engine Service
  trading-service:
    build:
      context: ./ml-services/trading
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - ALPACA_API_KEY=${ALPACA_API_KEY}
      - ALPACA_SECRET_KEY=${ALPACA_SECRET_KEY}
      - ALPACA_BASE_URL=https://paper-api.alpaca.markets
      - FINNHUB_API_KEY=${FINNHUB_API_KEY}
      - REDIS_URL=redis://redis:6379
      - PORT=8002
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./ml-services/trading:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://trading_user:trading_password@postgres:5432/trading_platform
      - REDIS_URL=redis://redis:6379
      - CLIENT_URL=http://localhost:3000
      - JWT_SECRET=your-super-secret-jwt-key-here
      - SENTIMENT_SERVICE_URL=http://sentiment-service:8001
      - TRADING_SERVICE_URL=http://trading-service:8002
      - ALPACA_API_KEY=${ALPACA_API_KEY}
      - ALPACA_SECRET_KEY=${ALPACA_SECRET_KEY}
      - FINNHUB_API_KEY=${FINNHUB_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      sentiment-service:
        condition: service_healthy
      trading-service:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:5000
      - VITE_WS_URL=http://localhost:5000
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: trading_platform_network